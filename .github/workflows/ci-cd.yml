name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.23'  # Versi Go yang digunakan

    - name: Install dependencies
      run: |
        go mod tidy
        go build -v ./...

    - name: Run tests
      run: go test -v ./...

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install PostgreSQL client
      run: |
        # Add PostgreSQL APT repository
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -c | awk "{print $2}")-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        
        # Import the repository signing key
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

        # Update package list
        sudo apt-get update

        # Install PostgreSQL client 17
        sudo apt-get install -y postgresql-client-17

    - name: Upload dump file
      uses: actions/upload-artifact@v3
      with:
        name: database-dump
        path: ./dump/db_contractsimsppob.dump

    - name: Download dump file
      uses: actions/download-artifact@v3
      with:
        name: database-dump
        path: ./dump

    - name: Deploy to Neon
      env:
        PGPASSWORD: ${{ secrets.NEON_DB_PASSWORD }}
      run: |
        pg_restore --host=${{ secrets.NEON_DB_HOST }} \
                    --username=${{ secrets.NEON_DB_USER }} \
                    --dbname=${{ secrets.NEON_DB_NAME }} \
                    --no-owner \
                    --clean \
                    --if-exists \
                    --verbose \
                    ./dump/db_contractsimsppob.dump